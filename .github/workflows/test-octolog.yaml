# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true
  
name: Octolog example workflow

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: local::.

      - name: Test octolog
        id: step1
        run: |
          library(octolog)
          library(magrittr)
          enable_github_colors()
          
          octocat("::echo::on")
          source(".github/workflows/R/conditions.R")

          octo_inform("Masking some secret stuff!")
          octo_mask_value("secret_gh_token")
          Sys.setenv("SECRET_NUMBER" = "007") 
          octo_mask_envvar("SECRET_NUMBER")
          octo_warn("`octo_mask_value` will only take effect in the NEXT step!")
          print("I accidentally logged my: secret_gh_token")
          print(Sys.getenv("SECRET_NUMBER"))
          readLines("DESCRIPTION") %>%
            encode_string(join = TRUE) %>%
            octo_set_output("desc")
          
          t <- octo_stop_commands()
          octo_inform("This will not be parsed")
          octo_start_commands(t)
          octo_inform("Now all commands are parsed again!")
        shell: Rscript {0}
      - name: Next step
        run: |
          library(octolog)
          octo_inform("Now in the next step the mask has taken effect:")
          print("I accidentally logged my: secret_gh_token")
          print("secret_gh_token")
          print(Sys.getenv("SECRET_NUMBER"))
          system("echo $SECRET_NUMBER")
          system("echo 'Oh no:secret_gh_token'")

          octo_inform("We can use outputs from previous steps in other steps using the step id.")
          octo_inform("Multiline strings will be automatically converted from their escaped form.")
          cat("${{steps.step1.outputs.desc }}")
        shell: Rscript {0}
