% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/messages.R
\name{octo_debug}
\alias{octo_debug}
\alias{octo_inform}
\alias{octo_warn}
\alias{octo_abort}
\title{Signal conditions that create Github annotations.}
\usage{
octo_debug(message, .envir = parent.frame())

octo_inform(
  message,
  ...,
  trace = rlang::trace_back(),
  title = NULL,
  .envir = parent.frame()
)

octo_warn(
  message,
  ...,
  trace = rlang::trace_back(),
  title = NULL,
  .envir = parent.frame()
)

octo_abort(
  message,
  ...,
  trace = rlang::trace_back(),
  title = NULL,
  .envir = parent.frame(),
  .fail_fast = getOption("octolog.fail_fast") \%||\% TRUE
)
}
\arguments{
\item{message}{It is formatted via a call to \code{\link[cli:cli_bullets]{cli_bullets()}}.}

\item{.envir}{Environment to evaluate the glue expressions in.}

\item{...}{Passed to \code{\link[rlang:abort]{rlang::abort()}}, \code{\link[rlang:abort]{rlang::warn()}} or
\code{\link[rlang:abort]{rlang::inform()}}.}

\item{trace}{An \code{\link[rlang:trace_back]{rlang::trace_back()}} will only be passed to \code{\link[rlang:abort]{rlang::abort()}}
if not \code{\link[=missing]{missing()}}.}

\item{title}{A custom title for the Github annotation.}

\item{.fail_fast}{An error on Github will not kill the R process if this is
set to \code{FALSE}. Use the option \code{octolog.fail_fast} to set the value
globally.`}
}
\description{
These functions are a drop-in replacements for \code{\link[cli:cli_abort]{cli::cli_warn()}} and friends.
If used while R is running within a Github Action, the conditions will be
signaled in such a way that they will create annotations on the files
affected. Even if \code{\link[=enable_github_colors]{enable_github_colors()}} was used the conditions will not
have colors in the log as the color codes break the annotation.
}
\details{
Annotations will only have file and line references if the option
\code{keep.source = TRUE} is set. It defaults to \code{FALSE} when in non-interactive
use.

The file path for the annotations will be relative to the R working
directory, if you want to change that set the envvar \code{OCTOLOG_REPO_DIR} to
the dir the path should be relative to. This will be necessary if the current
working directory is not the repository root (e.g. you checked out into a
separate dir), as annotations require the file paths to be relative to the
repository root.
}
\section{Functions}{
\itemize{
\item \code{octo_debug}: A debug message which is only visible if the
secret \code{ACTIONS_STEP_DEBUG} is set. For local use set option
\code{octolog.debug = TRUE}.
}}

\examples{
Sys.setenv(GITHUB_ACTIONS = "")
octo_warn(c("A warning message", i = "Try something else!"),
  title = "Custom Title"
)
Sys.setenv(GITHUB_ACTIONS = "TRUE")
octo_warn(c("A warning message", i = "Try something else!"),
  title = "Custom Title"
)
}
\seealso{
\code{\link[cli:cli_abort]{cli::cli_abort()}}
}
